FROM debian:latest

# Install base dependencies
RUN apt-get update -y && \
    apt-get upgrade -y && \
    apt-get install -y sudo curl ffmpeg git locales nano python3-pip screen ssh unzip wget autossh

# Set up locale
RUN localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
ENV LANG en_US.utf8

# Configure SSH
RUN mkdir -p /run/sshd && \
    mkdir -p /root/.ssh && \
    echo 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFshKeW/SRrfepjUPfA8LfZRg3sqX4rKhrSXB5w6K1Li Generated By Termius' > /root/.ssh/authorized_keys && \
    chmod 700 /root/.ssh && \
    chmod 600 /root/.ssh/authorized_keys && \
    echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config && \
    echo 'PasswordAuthentication yes' >> /etc/ssh/sshd_config && \
    echo 'root:choco' | chpasswd && \
    ssh-keygen -A

# Create web content
RUN mkdir -p /var/www && \
    echo "<html><body><h1>Python HTTP Server Working!</h1><p>SSH access via Serveo tunnel</p></body></html>" > /var/www/index.html

# Create startup script with Render compatibility
RUN echo "#!/bin/sh" > /start && \
    echo "# Prepare environment" >> /start && \
    echo "export PORT=\${PORT:-8000}" >> /start && \
    echo "mkdir -p /root/.ssh" >> /start && \
    echo "echo '[serveo.net]:22 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIElH2e9Yp0LkQ8+5rk5QsAtdxF+U5kKj7t7LYf21yX3J' > /root/.ssh/known_hosts" >> /start && \
    echo "" >> /start && \
    echo "# Start Python HTTP server (bound to 0.0.0.0 for Render)" >> /start && \
    echo "cd /var/www && python3 -m http.server \$PORT --bind 0.0.0.0 &" >> /start && \
    echo "" >> /start && \
    echo "# Start AutoSSH tunnel with logging" >> /start && \
    echo "echo 'Starting tunnel at \$(date)' >> /var/log/tunnel.log" >> /start && \
    echo "autossh -M 0 \\" >> /start && \
    echo "    -o 'StrictHostKeyChecking=accept-new' \\" >> /start && \
    echo "    -o 'ServerAliveInterval=60' \\" >> /start && \
    echo "    -o 'ServerAliveCountMax=3' \\" >> /start && \
    echo "    -N -R 0:localhost:22 serveo.net 2>&1 | tee -a /var/log/tunnel.log &" >> /start && \
    echo "" >> /start && \
    echo "# Start SSH server" >> /start && \
    echo "/usr/sbin/sshd -D" >> /start && \
    chmod 755 /start

# Create log directory
RUN mkdir -p /var/log

# Health check (required by Render)
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:$PORT/ || exit 1

# Use Render's PORT environment variable
ENV PORT=8000
EXPOSE $PORT 22

# Start command
CMD /start
